{"version":3,"file":"static/js/790.3e6aa660.chunk.js","mappings":"8LAEaA,EAAmB,SAAAC,GAC9B,OAA0CC,EAAAA,EAAAA,UAASD,GAAnD,eAAOE,EAAP,KAAsBC,EAAtB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,SAASL,MAAQE,CAClB,GAAE,CAACA,IAEG,CAACA,EAAeC,EACxB,C,yEC2DD,GAvDkBG,E,QAAAA,K,uCCTLC,EAAW,YACtBR,EAAAA,EAAAA,GAAiB,YACjB,OAAkCS,EAAAA,EAAAA,MAA1BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,UAEpB,OACE,SAAC,EAAD,CAAWC,GAAI,CAAEC,GAAI,GAArB,SACGH,GAAcC,GACb,SAAC,KAAD,KAEA,iCACE,SAAC,KAAD,KACA,SAAC,KAAD,QAKT,C","sources":["hooks/useDocumentTitle.jsx","../node_modules/@mui/system/esm/Container/Container.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nexport const useDocumentTitle = title => {\n  const [documentTitle, setDoucmentTitle] = useState(title);\n\n  useEffect(() => {\n    document.title = documentTitle;\n  }, [documentTitle]);\n\n  return [documentTitle, setDoucmentTitle];\n};\n","import PropTypes from 'prop-types';\nimport createContainer from './createContainer';\n/**\n *\n * Demos:\n *\n * - [Container (Material UI)](https://mui.com/material-ui/react-container/)\n * - [Container (MUI System)](https://mui.com/system/react-container/)\n *\n * API:\n *\n * - [Container API](https://mui.com/system/api/container/)\n */\n\nconst Container = createContainer();\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","import { Container } from '@mui/system';\nimport { ContactList, Filter, Loader } from 'components';\nimport { useDocumentTitle } from 'hooks/useDocumentTitle';\nimport { useGetContactsQuery } from 'redux/contacts/contactsApi';\n\nexport const Contacts = () => {\n  useDocumentTitle('Contacts');\n  const { isFetching, isLoading } = useGetContactsQuery();\n\n  return (\n    <Container sx={{ pb: 2 }}>\n      {isFetching && isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <Filter />\n          <ContactList />\n        </>\n      )}\n    </Container>\n  );\n};\n"],"names":["useDocumentTitle","title","useState","documentTitle","setDoucmentTitle","useEffect","document","createContainer","Contacts","useGetContactsQuery","isFetching","isLoading","sx","pb"],"sourceRoot":""}